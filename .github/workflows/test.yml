name: "CI"
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test_deno:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        deno-version: [1.20.1, "v1.x"]

    steps:
      - name: Git Checkout Deno Module
        uses: actions/checkout@v2
      - name: Use Deno Version ${{ matrix.deno-version }}
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}
      - name: Test Module
        run: deno task build

  test_node:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm run report
      - run: npm run codecov

  release:
    if: github.ref == 'refs/heads/master' && needs.test_node.result == 'success' && needs.test_deno.result == 'success'
    needs: [test_node,test_deno]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - uses: denolib/setup-deno@v2
        with:
          deno-version: 1.20.1
      - run: deno task build
      - run: npm ci
      - run: npm run build
      - run: npm run docs
      - run: git config --global user.name "JamesCullum (Pseudonym)"
      - run: git config --global user.email "https://mailhide.io/e/Wno7k"
      - run: npm run publish-docs
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
